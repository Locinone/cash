#
# autoconf input for Objective Caml programs
# Copyright (C) 2001 Jean-Christophe Filliâtre
#   from a first script by Georges Mariano 
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# (enclosed in the file LGPL).

# the script generated by autoconf from this input will set the following
# variables:
#   OCAMLC        "ocamlc" if present in the path, or a failure
#                 or "ocamlc.opt" if present with same version number as ocamlc
#   OCAMLOPT      "ocamlopt" (or "ocamlopt.opt" if present), or "no"
#   OCAMLBEST     either "byte" if no native compiler was found, 
#                 or "opt" otherwise
#   OCAMLDEP      "ocamldep"
#   OCAMLLEX      "ocamllex" (or "ocamllex.opt" if present)
#   OCAMLLIB      the path to the ocaml standard library
#   OCAMLVERSION  the ocaml version number

# check for one particular file of the sources 
AC_INIT(cash.mli)

# Check for Ocaml compilers

# we first look for ocamlc in the path; if not present, we fail
AC_PATH_PROG(OCAMLC,ocamlc,no)
if test "$OCAMLC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlc.)
fi

# we look for the directory of ocamlc in $OCAMLC
OCAMLBINDIR=`dirname $OCAMLC`

# we extract Ocaml version number and library path
OCAMLVERSION=`$OCAMLC -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"
OCAMLLIB=`$OCAMLC -v | tail -1 | cut -f 4 -d " "`
echo "ocaml library path is $OCAMLLIB"

# then we look for ocamlopt; if not present, we issue a warning
# if the version is not the same, we also discard it
# we set OCAMLBEST to "opt" or "byte", whether ocamlopt is available or not
AC_PATH_PROG(OCAMLOPT,ocamlopt,no,$OCAMLBINDIR)
OCAMLBEST=byte
if test "$OCAMLOPT" = no ; then
	AC_MSG_WARN(Cannot find ocamlopt; bytecode compilation only.)
else
	AC_MSG_CHECKING(ocamlopt version)
	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
	    OCAMLOPT=no
	else
	    AC_MSG_RESULT(ok)
	    OCAMLBEST=opt
	fi
fi

# checking for ocamlc.opt
AC_PATH_PROG(OCAMLCDOTOPT,ocamlc.opt,no,$OCAMLBINDIR)
if test "$OCAMLCDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVERSION=`$OCAMLCDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlc.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLC=$OCAMLCDOTOPT
	fi
fi

# checking for ocamlopt.opt
if test "$OCAMLOPT" != no ; then
    AC_PATH_PROG(OCAMLOPTDOTOPT,ocamlopt.opt,no,$OCAMLBINDIR)
    if test "$OCAMLOPTDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVER=`$OCAMLOPTDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
	if test "$TMPVER" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLOPT=$OCAMLOPTDOTOPT
	fi
    fi
fi

# ocamldep and ocamllex should also be present in the same directory
AC_PATH_PROG(OCAMLDEP,ocamldep,no,$OCAMLBINDIR)
if test "$OCAMLDEP" = no ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi

AC_PATH_PROG(OCAMLLEX,ocamllex,no,$OCAMLBINDIR)
if test "$OCAMLLEX" = no ; then
    AC_MSG_ERROR(Cannot find ocamllex.)
else
    AC_PATH_PROG(OCAMLLEXDOTOPT,ocamllex.opt,no,$OCAMLBINDIR)
    if test "$OCAMLLEXDOTOPT" != no ; then
	OCAMLLEX=$OCAMLLEXDOTOPT
    fi
fi

AC_PATH_PROG(CAMLP4,camlp4,no,$OCAMLBINDIR)
if test "$CAMLP4" = no ; then
	  AC_MSG_ERROR(Cannot find camlp4.)
fi

AC_PATH_PROG(CAMLP4R,camlp4r,no,$OCAMLBINDIR)
if test "$CAMLP4R" = no ; then
	  AC_MSG_ERROR(Cannot find camlp4r.)
fi

AC_PATH_PROG(OCAMLMKTOP,ocamlmktop,no,$OCAMLBINDIR)
if test "$OCAMLMKTOP" = no ; then
	  AC_MSG_ERROR(Cannot find ocamlmktop.)
fi

AC_PATH_PROG(OCAMLMKLIB,ocamlmklib,no,$OCAMLBINDIR)
if test "$OCAMLMKLIB" = no ; then
	  AC_MSG_ERROR(Cannot find ocamlmklib.)
fi

AC_PATH_PROG(OCAMLDOC,ocamldoc,no,$OCAMLBINDIR)
if test "$OCAMLDOC" = no ; then
    AC_MSG_ERROR(Cannot find ocamldoc.)
else
    AC_PATH_PROG(OCAMLDOCDOTOPT,ocamldoc.opt,no,$OCAMLBINDIR)
    if test "$OCAMLDOCDOTOPT" != no ; then
	OCAMLDOC=$OCAMLDOCDOTOPT
    fi
fi

test -d ./ocaml ||
	AC_MSG_ERROR(Please make a symlink named ocaml to the ocaml sources)
OCAMLSRCDIR=`cd ./ocaml && /bin/pwd`

: "${PCRELIBDIR=$OCAMLLIB/contrib}"
test -f $PCRELIBDIR/pcre.cma ||
	AC_MSG_ERROR(Cannot find pcre.cma in $PCRELIBDIR)

# we struggle with autoconf to make it spit out its most hidden innards (life stinks, sometimes)
case `eval echo $bindir` in
NONE/bin) BINDIR=$prefix/bin
	case $BINDIR in
	NONE/bin) BINDIR=$ac_default_prefix/bin;;
	esac;;
*)	BINDIR=$bindir;;
esac

case `eval echo $libdir` in
NONE/lib) LIBDIR=$PCRELIBDIR;;
*)	LIBDIR=$libdir;;
esac

if test $LIBDIR = $PCRELIBDIR; then
	DLLS="-dllpath $LIBDIR"
else
	DLLS="-dllpath $LIBDIR -dllpath $PCRELIBDIR"
fi

echo 'int id (int i) { return i; }' >t.c
$OCAMLC t.c
$OCAMLMKLIB t.o -o t
if test -f dllt.so; then
	DLLIB=dllcash.so
fi
rm -f t.c t.o libt.a dllt.so

# Substitutions to perform
AC_SUBST(BINDIR)
AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLDOC)
AC_SUBST(OCAMLLEX)
AC_SUBST(CAMLP4)
AC_SUBST(CAMLP4R)
AC_SUBST(OCAMLMKTOP)
AC_SUBST(OCAMLMKLIB)
AC_SUBST(OCAMLBEST)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLLIB)
AC_SUBST(OCAMLSRCDIR)
AC_SUBST(PCRELIBDIR)
AC_SUBST(LIBDIR)
AC_SUBST(DLLS)
AC_SUBST(DLLIB)

# Finally create the Makefile etc. from XX.in
AC_OUTPUT(Makefile set_dir.ml cash-tramp.ml)
chmod a-w Makefile set_dir.ml cash-tramp.ml
echo creating sys.h
>sys.h
cc=`cc=$OCAMLC verbose=yes sh ocaml/config/auto-aux/hasgot -verbose 2>&1 | 
	sed -n "/^+ /s///;s/hasgot.c//;s/''//;s/ -c / /p"`
if cc="$cc" sh ocaml/config/auto-aux/hasgot -i netdb.h getnetbyname getnetbyaddr; then
	echo '#define HAS_GETNET' >>sys.h
fi
rm -f tst hasgot.c hasgot.o
